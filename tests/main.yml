---
# Tasks for testing role

- name: Configure vagrant sandbox environment
  hosts: localhost
  roles:
    - role: amtega.vagrant_presets
      vagrant_presets_boxes_json_query: >-
        [? starts_with(name, `centos-7`)
           || starts_with(name, `fedora-29`)
           || starts_with(name, `fedora-30`) ]
  tags:
    - sandbox

- name: Run idempotence test
  hosts: localhost
  roles:
    - role: amtega.vagrant_sandbox
      vagrant_sandbox_state: started
  tags:
    - sandbox

- name: Setup software and config requirements in sandbox hosts
  hosts: vagrant_sandbox_vms
  roles:
    - role: amtega.docker_engine
    - role: amtega.docker_presets
  tasks:
    - name: Install required packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - ansible
        - sshpass

    - name: Setup fact to store test state file
      set_fact:
        test_state_file: /tmp/docker_provisioner_role_test.yml

    - name: Check test state file
      stat:
        path: "{{ test_state_file }}"
      register: check_test_state_file

    - block:
        - name: Generate docker_provisioner random images presets
          set_fact:
            docker_provisioner_images:
              - "{{ docker_presets_images | random }}"

        - name: Generate docker_provisioner no ssh containers presets
          set_fact:
            docker_provisioner_containers_no_ssh: >-
              {{ docker_presets_containers
                 | selectattr("image",
                              "equalto",
                              docker_provisioner_images[0].name)
                 | list
                 | docker_presets_randomize_names
                 | docker_presets_remove_attributes(["ssh_port"])
                 | docker_presets_add_attributes(
                      {"networks": [{"name": "bridge"}]}) }}

        - name: Generate docker_provisioner ssh containers presets
          set_fact:
            docker_provisioner_containers_ssh: >-
              {{ docker_presets_containers
                 | selectattr("image",
                              "equalto",
                              docker_provisioner_images[0].name)
                 | list
                 | docker_presets_randomize_names }}

        - name: Save generate presets info state file
          copy:
            dest: "{{ test_state_file }}"
            content: "{{ test_state | to_yaml }}"
          vars:
            test_state:
              docker_provisioner_images: "{{ docker_provisioner_images }}"
              docker_provisioner_containers_no_ssh: >-
                {{ docker_provisioner_containers_no_ssh }}
              docker_provisioner_containers_ssh: >-
                {{ docker_provisioner_containers_ssh }}
      when: not check_test_state_file.stat.exists

    - block:
        - name: Read test state file
          command: "cat {{ test_state_file }}"
          changed_when: false
          register: load_stat_file_result

        - name: Setup docker_provisioner presets facts
          set_fact:
            docker_provisioner_images: >-
              {{ state.docker_provisioner_images }}
            docker_provisioner_containers_no_ssh: >-
              {{ state.docker_provisioner_containers_no_ssh }}
            docker_provisioner_containers_ssh: >-
              {{ state.docker_provisioner_containers_ssh }}
          vars:
            state: "{{ load_stat_file_result.stdout | from_yaml }}"
      when: check_test_state_file.stat.exists
  tags:
    - idempotence

- name: Test async ssh provisioning and in memory inventory disabled
  hosts: vagrant_sandbox_vms
  roles:
    - role: amtega.docker_provisioner
      docker_provisioner_containers_provisioning_method: asynchronous
      docker_provisioner_containers: "{{ docker_provisioner_containers_ssh }}"
      docker_provisioner_container_state: started
      docker_provisioner_in_memory_inventory: false
  vars:
    docker_provisioner_inventory: /tmp/docker_inventory
  tasks:
    - name: Check provisioned containers connection
      command: >-
        ansible -m setup
        -i {{ docker_provisioner_inventory }}
        {{ container.name }}
      changed_when: false
      loop: >-
        {{ docker_provisioner_containers_facts
           | selectattr("groups.0", "equalto", "docker_provisioner_containers")
           | list }}
      loop_control:
        loop_var: container
        label: >-
          {{ container.name }}
          {{ container.ansible_connection }}
          {{ container.ansible_host }}{{ (container.ansible_connection == "ssh")
                                          | ternary(":"
                                                    + container.ansible_port
                                                      | default('')
                                                      | string
                                                    , "") }}
  tags:
    - idempotence

- name: Test sequential non-ssh provisioning and in memory inventory eanbled
  hosts: vagrant_sandbox_vms
  roles:
    - role: amtega.docker_provisioner
      docker_provisioner_containers_provisioning_method: sequential
      docker_provisioner_containers: >-
        {{ docker_provisioner_containers_no_ssh }}
      docker_provisioner_container_state: started
      docker_provisioner_in_memory_inventory: true
  vars:
    docker_provisioner_inventory: /tmp/docker_inventory
  tasks:
    - name: Check provisioned containers connection
      command: >-
        ansible -m setup
        -i {{ docker_provisioner_inventory }}
        {{ container.name }}
      changed_when: false
      loop: >-
        {{ docker_provisioner_containers_facts
           | selectattr("name", "in", groups["docker_provisioner_containers"])
           | list }}
      loop_control:
        loop_var: container
        label: >-
          {{ container.name }}
          {{ container.ansible_connection }}
          {{ container.ansible_host }}{{ (container.ansible_connection == "ssh")
                                          | ternary(":"
                                                    + container.ansible_port
                                                      | default('')
                                                      | string
                                                    , "") }}

- name: Test cleanup
  hosts: vagrant_sandbox_vms
  roles:
    - role: amtega.docker_provisioner
      docker_provisioner_containers_provisioning_method: asynchronous
      docker_provisioner_containers: >-
        {{ docker_provisioner_containers_no_ssh }}
      docker_provisioner_container_state: absent
      docker_provisioner_in_memory_inventory: false

    - role: amtega.docker_provisioner
      docker_provisioner_containers_provisioning_method: sequential
      docker_provisioner_containers: >-
        {{ docker_provisioner_containers_ssh }}
      docker_provisioner_container_state: absent
      docker_provisioner_in_memory_inventory: true
  tasks:
    - name: Get containers
      command: docker ps -a -q
      register: get_containers_result

    - name: Check that containers were removed
      assert:
        that: not get_containers_result.stdout is search(item)
      loop: >-
        {{ (docker_provisioner_containers_ssh
            + docker_provisioner_containers_no_ssh)
           | map(attribute="name")
           | list }}

    - name: Remove presets info state file
      file:
        path: "{{ test_state_file }}"
        state: absent

- name: Cleanup vagrant sandbox
  hosts: localhost
  roles:
    - role: amtega.vagrant_sandbox
      vagrant_sandbox_state: absent
  tags:
    - cleanup
    - sandbox
