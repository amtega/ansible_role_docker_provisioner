---
# Setup docker containers

- block:
  - name: setup docker containers
    docker_container:
      name: >-
        {{ name }}
      image: >-
        {{ docker_provisioner_containers[name].image }}
      privileged: >-
        {{ docker_provisioner_containers[name].privileged
          | default(docker_provisioner_container_privileged) }}
      state: >-
        {{ docker_provisioner_containers[name].state
          | default(docker_provisioner_container_state) }}
      restart: >-
        {{ docker_provisioner_containers[name].restart
          | default(docker_provisioner_container_restart) }}
      tls: >-
        {{ docker_provisioner_containers[name].tls
          | default(docker_provisioner_container_tls) }}
      stop_timeout: >-
        {{ docker_provisioner_containers[name].stop_timeout
          | default(docker_provisioner_container_stop_timeout) }}
      tty: >-
        {{ docker_provisioner_containers[name].tty
          | default(docker_provisioner_container_tty) }}
      expose: >-
        {{ docker_provisioner_containers[name].expose
          | default(docker_provisioner_container_expose) }}
      command: >-
        {{ docker_provisioner_containers[name].command
          | default(docker_provisioner_container_command) }}
      env: >-
        {{ docker_provisioner_containers[name].env
          | default(docker_provisioner_container_env) }}
      links: >-
        {{ docker_provisioner_containers[name].links
          | default(docker_provisioner_container_links) }}
      volumes: >-
        {{ docker_provisioner_containers[name].volumes
          | default(docker_provisioner_container_volumes) }}
    with_items: >
      {{ docker_provisioner_containers }}
    loop_control:
      loop_var: name

  - block:
    - name: get containers ip addresses
      shell: >-
        docker inspect --format='{''{.NetworkSettings.IPAddress}''}'
        {{ name }}
      register: docker_provisioner_get_ip_result
      when: >
        "{{ docker_provisioner_containers[name].state
          | default(docker_provisioner_container_state) }}" == "started"
      with_items: >
        {{ docker_provisioner_containers }}
      loop_control:
        loop_var: name
      changed_when: false

    - name: associate auth info / group info to containers
      add_host:
        name: >-
          {{ name }}
        ansible_user: >-
          {{ docker_provisioner_containers[name].ansible_user
            | default(docker_provisioner_container_ansible_user) }}
        ansible_password: >-
          {{ docker_provisioner_containers[name].ansible_password
            | default(docker_provisioner_container_ansible_password) }}
        groups: >-
          {{ docker_provisioner_containers[name].groups
            | default(docker_provisioner_container_groups) }}
      when: >
        "{{ docker_provisioner_containers[name].state
          | default(docker_provisioner_container_state) }}" == "started"
      with_items: >
        {{ docker_provisioner_containers }}
      changed_when: false
      loop_control:
        loop_var: name

    - include: setup_containers_tty.yml
    - include: setup_containers_ssh.yml

  tags:
    - role::docker_provisioner
    - role::docker_provisioner::containers
