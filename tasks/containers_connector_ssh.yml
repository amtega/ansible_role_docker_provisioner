---
# Setup connection for docker containers that use ssh

- block:
    - name: create .ssh directory
      file:
        path: "~/.ssh"
        state: directory
        mode: 0700

    - name: get containers ssh host port mapping
      shell: >-
        {{ command_start
           + " "
           + '"'
           + container.1.ssh_port
             | default(docker_provisioner_container_ssh_port)
             | string
           + "/tcp"
           + '"'
           + command_end
           + " "
           + container.1.name }}
      when: >-
        container.1.state
        | default(docker_provisioner_container_state) in ["present", "started"]
      register: docker_provisioner_get_ssh_mapped_port_result
      changed_when: false
      failed_when: false
      loop: >-
        {{ query('indexed_items', docker_provisioner_containers) }}
      loop_control:
        label: "{{ container.1.name }} {{ ips[container.0] }}"
        loop_var: container
      check_mode: no
      vars:
        command_start: >-
          docker inspect --format='{''{(index (index .NetworkSettings.Ports
        command_end: >-
          ) 0).HostPort}''}'

    - block:
        - name: setup containers ssh connector
          add_host:
            name: "{{ container.1.name }}"
            ansible_host: "{{ docker_provisioner_host_ip }}"
            ansible_port: "{{ mapped_ports[container.0] }}"
            ansible_connection: ssh
          changed_when: false
          loop: >-
            {{ query('indexed_items', docker_provisioner_containers) }}
          loop_control:
            label: >-
              {{ container.1.name }}
              {{ ips[container.0] }}
              {{ docker_provisioner_host_ip }}:{{ mapped_ports[container.0] }}
            loop_var: container

        - name: gather containers ssh public keys
          shell: >-
            ssh-keyscan \
            -T \
            {{ container.1.public_key_timeout
               | default(docker_provisioner_container_public_key_timeout) }} \
            -p {{ mapped_ports[container.0] }} \
            {{ docker_provisioner_host_ip }}
          changed_when: false
          register: docker_provisioner_get_public_keys_result
          loop: >-
            {{ query('indexed_items', docker_provisioner_containers) }}
          loop_control:
            label: >-
              {{ container.1.name }}
              {{ ips[container.0] }}
              {{ docker_provisioner_host_ip }}:{{ mapped_ports[container.0] }}
            loop_var: container
          check_mode: no

        - name: setup ssh known_hosts entries in control host
          local_action: known_hosts
          args:
            name: >-
              [{{ docker_provisioner_host_ip }}]:{{ mapped_ports[container.0] }}
            key: "{{ public_keys[container.0] }}"
            state: present
          loop: "{{ query('indexed_items', docker_provisioner_containers) }}"
          loop_control:
            label: >-
              {{ container.1.name }}
              {{ ips[container.0] }}
              {{ docker_provisioner_host_ip }}:{{ mapped_ports[container.0] }}
            loop_var: container

        - name: setup ssh known_hosts entries in docker host
          known_hosts:
            name: >-
              [{{ docker_provisioner_host_ip }}]:{{ mapped_ports[container.0] }}
            key: "{{ public_keys[container.0] }}"
            state: present
          loop: "{{ query('indexed_items', docker_provisioner_containers) }}"
          loop_control:
            label: >-
              {{ container.1.name }}
              {{ ips[container.0] }}
              {{ docker_provisioner_host_ip }}:{{ mapped_ports[container.0] }}
            loop_var: container
      when:
        - >
          container.1.state
          | default(docker_provisioner_container_state)
          in ["present", "started"]
        - >
          mapped_ports[container.0] | length > 0
        - >
          container.1.ssh_port
          | default(docker_provisioner_container_ssh_port)
          | string
          | length > 0
        - >
          docker_provisioner_containers_deploy_result.results[container.0]
          is changed
      vars:
        public_keys: >-
          {{ docker_provisioner_get_public_keys_result.results
             | map(attribute="stdout")
             | list }}
  vars:
    mapped_ports: >-
      {{ docker_provisioner_get_ssh_mapped_port_result.results
         | map(attribute="stdout")
         | list }}
    ips: "{{ docker_provisioner_containers_ips }}"
    default_ssh_port: "{{ docker_provisioner_container_ssh_port }}"
  tags:
    - role::docker_provisioner
    - role::docker_provisioner::containers
