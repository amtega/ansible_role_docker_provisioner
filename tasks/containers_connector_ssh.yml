---
# Setup connection for docker containers that use ssh

- block:
    - name: create .ssh directory
      file:
        path: "~/.ssh"
        state: directory
        mode: 0700

    - name: get containers ssh host port mapping
      shell: >-
        {{ command_start
           + " "
           + '"'
           + container.ssh_port
             | default(docker_provisioner_container_ssh_port)
             | string
           + "/tcp"
           + '"'
           + command_end
           + " "
           + container.name }}
      when: >-
        container.state
        | default(docker_provisioner_container_state) in ["present", "started"]
      register: docker_provisioner_get_ssh_mapped_port_result
      changed_when: false
      failed_when: false
      loop: "{{ docker_provisioner_containers }}"
      loop_control:
        label: "{{ container.name }}"
        loop_var: container
      check_mode: no
      vars:
        command_start: >-
          docker inspect --format='{''{(index (index .NetworkSettings.Ports
        command_end: >-
          ) 0).HostPort}''}'

    - block:
        - name: setup containers ssh connector
          add_host:
            name: "{{ container.1.name }}"
            ansible_host: >-
              {{ ansible_host }}
            ansible_port: "{{ ssh_mapped_ports[container.0] }}"
            ansible_connection: ssh
          loop: "{{ query('indexed_items', docker_provisioner_containers) }}"
          when:
            - >
              container.1.ssh_port
              | default(docker_provisioner_container_ssh_port)
              | string
              | length > 0
            - >
              container.1.state
              | default(docker_provisioner_container_state)
              in ["present", "started"]
          changed_when: false
          loop_control:
            label: "{{ container.1.name }}"
            loop_var: container

        - name: wait for docker containers ssh port
          wait_for:
            host: "{{ ansible_host }}"
            port: "{{ ssh_mapped_ports[container.0] }}"
            timeout: 60
            connect_timeout: 5
          changed_when: false
          when:
            - >
              container.1.ssh_port
              | default(docker_provisioner_container_ssh_port)
              | string
              | length > 0
            - >
              container.1.state
              | default(docker_provisioner_container_state)
              in ["present", "started"]
          loop: "{{ query('indexed_items', docker_provisioner_containers) }}"
          loop_control:
            label: >-
              {{ container.1.name
                 + " "
                 + docker_provisioner_containers_ips[container.0]
                   | default('') }}
            loop_var: container

        - name: gather containers ssh public keys
          shell: >-
            ssh-keyscan -T 10
            {{ docker_provisioner_containers_ips[container.0] }}
            -p {{ container.1.ssh_port
                  | default(docker_provisioner_container_ssh_port)
                  | string }}
          changed_when: false
          when:
            - >
              container.1.ssh_port
              | default(docker_provisioner_container_ssh_port)
              | string
              | length > 0
            - >
              container.1.state
              | default(docker_provisioner_container_state)
              in ["present", "started"]
          loop: "{{ query('indexed_items', docker_provisioner_containers) }}"
          register: docker_provisioner_get_public_keys_result
          loop_control:
            label: "{{ container.1.name }}"
            loop_var: container
          check_mode: no

        - name: remove old ssh known_hosts entries for containers
          known_hosts:
            name: >-
              [{{ ansible_host }}]:{{ ssh_mapped_ports[container.0] }}
            state: absent
          when:
            - >
              container.ssh_port
              | default(docker_provisioner_container_ssh_port)
              | string
              | length > 0
            - >
              container.1.state
              | default(docker_provisioner_container_state)
              in ["present", "started"]
          loop: "{{ query('indexed_items', docker_provisioner_containers) }}"
          loop_control:
            label: >-
              {{ container.1.name }}
              {{ docker_provisioner_containers_ips[container.0] | default('') }}
            loop_var: container

        - name: add ssh known_hosts entries for containers
          known_hosts:
            name: >-
              [{{ ansible_host }}]:{{ ssh_mapped_ports[container.0] }}
            key: >-
              {{ public_keys[container.0]['stdout']
                 | regex_replace(docker_provisioner_containers_ips[container.0],
                                 "["
                                 + ansible_host
                                 + "]:"
                                 + ssh_mapped_ports[container.0]) }}
            state: present
          when:
            - >
              container.1.ssh_port
              | default(docker_provisioner_container_ssh_port)
              | string
              | length > 0
            - >
              container.1.state
              | default(docker_provisioner_container_state)
              in ["present", "started"]
          loop: "{{ query('indexed_items', docker_provisioner_containers) }}"
          vars:
            public_keys: "{{ docker_provisioner_get_public_keys_result.results }}"
          loop_control:
            label: >-
              {{ container.1.name }}
              {{ docker_provisioner_containers_ips[container.0] | default('') }}
            loop_var: container
      when: ssh_mapped_ports[container.0] | length > 0
  vars:
    ssh_mapped_ports: >-
      {{ docker_provisioner_get_ssh_mapped_port_result.results
         | map(attribute="stdout")
         | list }}
  tags:
    - role::docker_provisioner
    - role::docker_provisioner::containers
