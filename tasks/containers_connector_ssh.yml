---
# Setup connection for docker containers that use ssh

- block:
    - name: create .ssh directory
      file:
        path: "~/.ssh"
        state: directory
        mode: 0700

    - name: get containers ssh host port mapping
      shell: >-
        {{ command_start
           + " "
           + '"'
           + container.ssh_port
             | default(docker_provisioner_container_ssh_port)
             | string
           + "/tcp"
           + '"'
           + command_end
           + " "
           + container.name }}
      when: >-
        container.state
        | default(docker_provisioner_container_state) in ["present", "started"]
      register: docker_provisioner_get_ssh_mapped_port_result
      changed_when: false
      failed_when: false
      loop: "{{ docker_provisioner_containers }}"
      loop_control:
        label: "{{ container.name }}"
        loop_var: container
      check_mode: no
      vars:
        command_start: >-
          docker inspect --format='{''{(index (index .NetworkSettings.Ports
        command_end: >-
          ) 0).HostPort}''}'

    - block:
        - block:
            - name: setup containers ssh connector
              add_host:
                name: "{{ container.1.name }}"
                ansible_host: >-
                  {{ (inventory_hostname != "localhost")
                     | ternary(container_ip, ansible_host) }}
                ansible_port: >-
                  {{ (inventory_hostname != "localhost")
                     | ternary(container_ssh_port, container_ssh_port_mapped) }}
                ansible_connection: ssh
              loop: >-
                {{ query('indexed_items', docker_provisioner_containers) }}
              changed_when: false
              loop_control:
                label: "{{ container.1.name }}"
                loop_var: container

            - name: wait for docker containers ssh port
              wait_for:
                host: "{{ ansible_host }}"
                port: "{{ container_ssh_port_mapped }}"
                timeout: 60
                connect_timeout: 5
              changed_when: false
              loop: >-
                {{ query('indexed_items', docker_provisioner_containers) }}
              loop_control:
                label: >-
                  {{ container.1.name
                     + " "
                     + ips[container.0]
                       | default('') }}
                loop_var: container

            - name: gather containers ssh public keys
              shell: >-
                ssh-keyscan -T 10
                {{ container_ip }}
                -p {{ container_ssh_port }}
              changed_when: false
              loop: >-
                {{ query('indexed_items', docker_provisioner_containers) }}
              register: docker_provisioner_get_public_keys_result
              loop_control:
                label: "{{ container.1.name }}"
                loop_var: container
              check_mode: no
          when: >-
            container.1.state
            | default(docker_provisioner_container_state)
            in ["present", "started"]

        - name: setup ssh known_hosts entries in docker host
          known_hosts:
            name: >-
              {{ container_known_hosts_ip }}:{{ container_ssh_port}}
            key: >-
              {{ public_keys[container.0]
                 | regex_replace(container_ip,
                                 container_known_hosts_ip
                                 + ":"
                                 + container_ssh_port) }}
            state: present
          loop: >-
            {{ query('indexed_items', docker_provisioner_containers) }}
          loop_control:
            label: >-
              {{ container.1.name }}
              {{ ips[container.0] | default('') }}
            loop_var: container
          vars:
            container_known_hosts_ip: >-
              {{ (container_ssh_port == "22")
                 | ternary(container_ip, "[" + container_ip + "]") }}

        - name: setup ssh known_hosts entries in ansible controller
          local_action: known_hosts
          args:
            name: >-
              {{ container_known_hosts_ip }}:{{ mapped_ports[container.0] }}
            key: >-
              {{ public_keys[container.0]
                 | regex_replace(ips[container.0],
                                 container_known_hosts_ip
                                 + ":"
                                 + mapped_ports[container.0]) }}
            state: present
          when: >-
            container.1.state
            | default(docker_provisioner_container_state)
            in ["present", "started"]
          loop: >-
            {{ query('indexed_items', docker_provisioner_containers) }}
          loop_control:
            label: >-
              {{ container.1.name }}
              {{ container_ip | default('') }}
            loop_var: container
          vars:
            container_known_hosts_ip: "[{{ ansible_host }}]"
      vars:
        public_keys: >-
          {{ docker_provisioner_get_public_keys_result.results
             | map(attribute="stdout")
             | list }}
        container_ip: "{{ ips[container.0] }}"
        container_ssh_port: >-
          {{ container.1.ssh_port
             | default(default_ssh_port)
             | string }}
        container_ssh_port_mapped: "{{ mapped_ports[container.0] }}"
      when:
        - mapped_ports[container.0] | length > 0
        - >
          container.1.ssh_port
          | default(docker_provisioner_container_ssh_port)
          | string
          | length > 0
        - >
          docker_provisioner_containers_deploy_result.results[container.0]
          is changed
  vars:
    mapped_ports: >-
      {{ docker_provisioner_get_ssh_mapped_port_result.results
         | map(attribute="stdout")
         | list }}
    ips: "{{ docker_provisioner_containers_ips }}"
    default_ssh_port: "{{ docker_provisioner_container_ssh_port }}"
  tags:
    - role::docker_provisioner
    - role::docker_provisioner::containers
