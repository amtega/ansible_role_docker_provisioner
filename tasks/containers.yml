---
# Setup docker containers

- block:
    - import_tasks: "{{ playbook }}"
      vars:
        method: "{{ docker_provisioner_containers_provisioning_method }}"
        playbook: >-
          {{ (method == "asynchronous")
             | ternary("containers_provisioning_asynchronous.yml",
                       "containers_provisioning_sequential.yml") }}

    - name: get containers ip addresses
      shell: >-
        docker inspect --format='{''{.NetworkSettings.IPAddress}''}'
        {{ container.name }}
      when: >-
        container.state
        | default(docker_provisioner_container_state) in ["present", "started"]
      register: docker_provisioner_get_ip_result
      loop: "{{ docker_provisioner_containers }}"
      loop_control:
        label: "{{ container.name }}"
        loop_var: container
      changed_when: false
      check_mode: no

    - name: associate auth info / group info to containers
      add_host:
        name: "{{ container.1.name }}"
        ansible_user: >-
          {{ container.1.ansible_user
            | default(docker_provisioner_container_ansible_user) }}
        ansible_password: >-
          {{ container.1.ansible_password
            | default(docker_provisioner_container_ansible_password) }}
        groups: >-
          {{ container.1.groups | default([])
             + docker_provisioner_container_groups }}
        docker_ip: >-
          {{ docker_provisioner_get_ip_result.results[container.0].stdout }}
      when: >-
        container.state
        | default(docker_provisioner_container_state)
        in ["present", "started"]
      loop: "{{ query('indexed_items', docker_provisioner_containers) }}"
      changed_when: false
      loop_control:
        label: "{{ container.1.name }}"
        loop_var: container

    - block:
        - import_tasks: containers_connector_docker.yml
          when: >-
            docker_provisioner_containers
            | selectattr("ssh_port", "undefined")
            | list
            | length > 0
            and docker_provisioner_container_ssh_port | length == 0

        - import_tasks: containers_connector_ssh.yml
          when: >-
            docker_provisioner_containers
            | selectattr("ssh_port", "defined")
            | list
            | length > 0
      vars:
        docker_provisioner_containers_ips: >-
          {{ docker_provisioner_get_ip_result.results
             | map(attribute="stdout")
             | list }}

    - name: save inventory file with the deployed containers
      template:
        src: inventory.j2
        dest: "{{ docker_provisioner_inventory }}"
        backup: no
      when:
        - docker_provisioner_inventory is defined
        - docker_provisioner_inventory | length > 0
  tags:
    - role::docker_provisioner
    - role::docker_provisioner::containers
