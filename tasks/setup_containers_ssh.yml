---
# Setup connection for docker containers that use ssh

- block:

  - name: setup containers ssh connection
    add_host:
      name: "{{ container.1.name }}"
      ansible_host: >-
        {{ docker_provisioner_get_ip_result.results[container.0].stdout }}
      docker_ip: >-
        {{ docker_provisioner_get_ip_result.results[container.0].stdout }}
      ansible_connection: ssh
    with_indexed_items: >
      {{ docker_provisioner_deployed_containers | list }}
    when:
      - >
        not container.1.tty
          | default(docker_provisioner_container_tty)
      - >
        "{{ container.1.state
          | default(docker_provisioner_container_state) }}" == "started"
    changed_when: false
    loop_control:
      label: "{{ container.1.name }}"
      loop_var: container

  - name: remove ssh known_hosts entry for containers
    known_hosts:
      name: >-
        {{ docker_provisioner_get_ip_result.results[container.0]['stdout'] }}
      state: absent
    when:
        - >
          not container.1.tty
            | default(docker_provisioner_container_tty)
        - >
          "{{ container.1.state
            | default(docker_provisioner_container_state) }}" == "started"
    with_indexed_items: >
      {{ docker_provisioner_deployed_containers }}
    loop_control:
      label: >-
        {{ container.1.name }}
        {{ docker_provisioner_get_ip_result.results[container.0]['stdout']
          | default('') }}
      loop_var: container

  - name: ensure that is possible to connect with ssh to docker containers
    wait_for:
      host: "{{ hostvars[container.1.name]['ansible_host'] }}"
      port: 22
      timeout: 60
      connect_timeout: 5
    changed_when: false
    when:
      - >
        not container.1.tty
          | default(docker_provisioner_container_tty)
      - >
        "{{ container.1.state
          | default(docker_provisioner_container_state) }}" == "started"
    with_indexed_items: >
      {{ docker_provisioner_deployed_containers }}
    loop_control:
      label: >-
        {{ container.1.name
          + " "
          +  docker_provisioner_get_ip_result.results[container.0]['stdout']
            | default('') }}
      loop_var: container

  tags:
    - role::docker_provisioner
    - role::docker_provisioner::containers
