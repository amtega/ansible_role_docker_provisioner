---
# Setup docker images

- name: launch asynchronous docker image deploy
  docker_image:
    name: "{{ image.name }}"
    dockerfile: >-
      {{ image.dockerfile
         | default(docker_provisioner_image_dockerfile) }}
    buildargs: >-
      {{ image.buildargs
         | default(docker_provisioner_image_buildargs) }}
    force: >-
      {{ image.force
         | default(docker_provisioner_image_force) }}
    path: >-
      {{ image.path
         | default(docker_provisioner_image_path) }}
    rm: >-
      {{ image.rm
         | default(docker_provisioner_image_rm) }}
    state: >-
      {{ image.state
         | default(docker_provisioner_image_state) }}
  with_items: "{{ docker_provisioner_images }}"
  register: docker_provisioner_images_async_result
  loop_control:
    label: "{{ image.name }}"
    loop_var: image
  async: >-
    {{ image.max_provisioning_time
       | default(docker_provisioner_image_max_provisioning_time) }}
  poll: 0
  changed_when: false
  tags:
    - role::docker_provisioner
    - role::docker_provisioner::images

- name: check asynchronous docker image deploy
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  with_items: "{{ docker_provisioner_images_async_result.results }}"
  loop_control:
    label: "{{ async_result_item.image.name }}"
    loop_var: async_result_item
  register: docker_provisioner_images_async_poll_results
  until: docker_provisioner_images_async_poll_results.finished
  retries: >-
    {{ async_result_item.image.max_provisioning_time
       | default(docker_provisioner_image_max_provisioning_time) }}
  delay: 1
