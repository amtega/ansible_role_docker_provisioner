---
# Role default lower priority variables

# List of dicts with the images to provisione. The dicts must have the following
# values (see docker_image module documentation for detais of each option):
#
# { name: ""                    # Name of the image
#   state: present              # Can be present or absent
#   dockerfile: Dockerfile      # Name of the Dockerfile to build the image
#   buildargs: {}               # Dict with the build arguments to build
#   force: no                # Force build / removal
#   path: .                     # Directory containing the context and
#                               # Dockerfile for building
#   rm: yes                    # Remove intermediate containers after build
#   timeout: 60                 # Seconds to wait on a response from the API.
#   repository: localhost:5000  # Full path to a repository
#   push: yes                  # Push the image to the registry
#   max_provisioning_time: 120  # Maximum asynchronous provisioning time }

docker_provisioner_images: []

# Indicate images provisioning method. Can be asynchronous or sequential

docker_provisioner_images_provisioning_method: sequential

# List of dicts with the containers to provisione. The dicts must have the
# following values (see docker_container module documentation for detais of
# each option):
#
# { name: ""                       # Name of the container
#   image: ""                      # Image to use to start the container
#   state: present                 # Can be started, present, absent and stopped
#   privileged: yes               # Give extended privileges to the container
#   tls: yes                      # Secure the connection to the API by using
                                   # TLS
#   tls_hostname: localhost        # Expected hostname during tls verification
#   stop_timeout: 1                # Seconds to wait for the container to stop
#   tty: yes                      # Allocate a pseudo-TTY
#   networks:                      # List of dicts with the networks the
#     name: TestingNet             # container belongs to.
#   exposed_ports: [22]            # List of additional container exposed ports
#   published_ports: [22]          # List of additional container published
#                                  # ports
#   command: ""                    # Command to execute when the container
#                                  # starts
#   command_handling: correct
#   env: {}                        # Dictionary with container environment
#   labels: {}                     # Dictionary with container labels
#   links: []                      # List of name aliases for linked containers
#   recreate: no                # Force the re-creation
#   force_kill: no              # Use the kill command when stopping
#   restart: no                 # Force stop and restart
#   volumes: []                    # List of volumes to mount
#   default_behavior: no_defaults
#   ssh_port: 22                   # Port where container listens for ssh
#                                  # If defined the role will add the container
#                                  # to the running inventory
#   ansible_user: root             # Ansible user to connect the container
#   ansible_password: root         # Ansible password to connect the container
#   ansible_ssh_common_args: >-    # Ansible SSH common args to use
#     -o PubkeyAuthentication=no
#     -o StrictHostKeyChecking=no
#   ansible_python_interpreter: >- # Ansible python interpreter to use
#     /usr/bin/python3
#   groups:                        # List of groups where to add the provisioned
#     - containers                 # containers
#   groups_unmanaged:              # List of groups where to add the discovered
#     - unmanaged_containers       # containers that are not in the list
#                                  # to provisione
#   max_provisioning_time: 120     # Maximum asynchronous provisioning time
#   public_key_scan_timeout: 5     # Seconds to wait for ssh public key scan }

docker_provisioner_containers: []

# Indicate containers provisioning method. Can be asynchronous or sequential

docker_provisioner_containers_provisioning_method: asynchronous

# Image options to apply if no other ones are specified in the specific
# image dictionary of the docker_provisioner_images variable. See
# docker_image module documentation for detais of each option.

docker_provisioner_image_name: ""
docker_provisioner_image_state: present
docker_provisioner_image_dockerfile: Dockerfile
docker_provisioner_image_buildargs: {}
docker_provisioner_image_force: no
docker_provisioner_image_path: >-
  {{ (ansible_facts.user_id == "root")
     | ternary("/var/lib/docker/build",
               "~/.docker/build" | expanduser) }}
docker_provisioner_image_rm: yes
docker_provisioner_image_timeout: 60
docker_provisioner_image_repository: ""
docker_provisioner_image_push: no
docker_provisioner_image_max_provisioning_time: 120

# General container options to apply if no other ones are specified in the
# specific container dictionary of the docker_provisioner_containers
# variable.

docker_provisioner_container_name: ""
docker_provisioner_container_image: ""
docker_provisioner_container_privileged: no
docker_provisioner_container_tls: yes
docker_provisioner_container_tls_hostname: localhost
docker_provisioner_container_stop_timeout: 1
docker_provisioner_container_tty: no
# docker_provisioner_container_networks:
docker_provisioner_container_exposed_ports: []
docker_provisioner_container_command: ""
docker_provisioner_container_command_handling: correct
docker_provisioner_container_env: {}
docker_provisioner_container_labels: {}
docker_provisioner_container_links: []
docker_provisioner_container_recreate: no
docker_provisioner_container_force_kill: no
docker_provisioner_container_restart: no
docker_provisioner_container_state: present
docker_provisioner_container_volumes: []
docker_provisioner_container_published_ports: []
docker_provisioner_container_default_behavior: no_defaults
docker_provisioner_container_ssh_port: ""
docker_provisioner_container_max_provisioning_time: 200
docker_provisioner_container_public_key_scan_timeout: 2
docker_provisioner_container_ansible_user: root
docker_provisioner_container_ansible_password: root
docker_provisioner_container_ansible_ssh_common_args: >-
    -o PreferredAuthentications=password
    -o PubkeyAuthentication=no
    -o StrictHostKeyChecking=no
docker_provisioner_container_ansible_python_interpreter: /usr/bin/python3
docker_provisioner_container_groups:
  - "docker_provisioner_containers"
docker_provisioner_container_groups_unmanaged:
  - "docker_provisioner_containers_unamanaged"

# Generate ansible-playbook in-memory info from containers with add_host
# Take into account that add_host module bypasses the play host loop and only
# runs once for all the hosts in the play. So, if you are managing several
# docker engines in the play, you must disable this flag and  call the this role
# again with this flag activated (and images/containers list empty)

docker_provisioner_in_memory_inventory: yes

# Ip address where docker host daemon is listening or where containers ports
# are bound

docker_provisioner_host_address: "{{ ansible_facts.default_ipv4.address }}"

# Port where docker host daemon is listening

docker_provisioner_host_port: 2375

# List of machines to update ssh known_hosts with deployed containers public
# keys

docker_provisioner_known_hosts_dest:
  - "{{ inventory_hostname }}"

# If defined, this variable tells to role to create a minimal inventory file
# containing the deployed containers. Be warned that auth info is contained in
# clear text in this file.

#docker_provisioner_inventory:
