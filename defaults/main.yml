---
# Role default lower priority variables

# List of dicts with the images to provisione. The dicts must have the following
# values (see docker_image module documentation for detais of each option):
#
# { name: ""                    # Name of the image
#   state: present              # Can be present or absent
#   dockerfile: Dockerfile      # Name of the Dockerfile to build the image
#   buildargs: {}               # Dict with the build arguments to build
#   force: false                # Force build / removal
#   path: .                     # Directory containing the context and
#                               # Dockerfile for building
#   rm: true                    # Remove intermediate containers after build
#   timeout: 60                 # Seconds to wait on a response from the API.
#   repository: localhost:5000  # Full path to a repository
#   push: true                  # Push the image to the registry
#   max_provisioning_time: 120  # Maximum asynchronous provisioning time }

docker_provisioner_images: []

# Indicate images provisioning method. Can be asynchronous or sequential

docker_provisioner_images_provisioning_method: sequential

# List of dicts with the containers to provisione. The dicts must have the
# following values ( see docker_container module documentation for detais of each
# option):
#
# { name: ""                   # Name of the container
#   image: ""                  # Image to use to start the container
#   state: present             # Can be started, present, absent and stopped
#   privileged: true           # Give extended privileges to the container
#   tls: true                  # Secure the connection to the API by using TLS
#   stop_timeout: 1            # Seconds to wait for the container to stop
#   tty: true                  # Allocate a pseudo-TTY
#   exposed_ports: [22]        # List of additional container exposed ports
#   published_ports: [22]      # List of additional container published ports
#   command: ""                # Command to execute when the container starts
#   env: {}                    # Dictionary with container environment
#   labels: {}                 # Dictionary with container labels
#   links: []                  # List of name aliases for linked containers
#   recreate: false            # Force the re-creation of an existing container
#   force_kill: false          # Use the kill command when stopping the container
#   restart: false             # Force the container to be stopped and restarted
#   volumes: []                # List of volumes to mount within the container
#   ssh_port: 22               # Port where container listens for ssh
#                              # If defined the rol will add the coontainer to
#                              # the running inventory for direct management
#   ansible_user: root         # Ansible user to connect the container
#   ansible_password: root     # Ansible password to connect the container
#   groups:                    # List of groups where to add the provisioned containers
#     - containers             # containers
#   max_provisioning_time: 120 # Maximum asynchronous provisioning time
#   pkey_control_host: true    # Register public key in ansible known_hosts
#   pkey_engine_host:  true    # Register public key in engine known_hosts
#   public_key_timeout: 5      # Secons to wait for ssh public key }

docker_provisioner_containers: []

# Indicate containers provisioning method. Can be asynchronous or sequential

docker_provisioner_containers_provisioning_method: asynchronous

# Image options to apply if no other ones are specified in the specific
# image dictionary of the docker_provisioner_images variable. See
# docker_image module documentation for detais of each option.

docker_provisioner_image_name: ""
docker_provisioner_image_state: present
docker_provisioner_image_dockerfile: Dockerfile
docker_provisioner_image_buildargs: {}
docker_provisioner_image_force: false
docker_provisioner_image_path: >-
  {{ (ansible_facts.user_id == "root")
     | ternary("/var/lib/docker/build",
               "~/.docker/build" | expanduser) }}
docker_provisioner_image_rm: true
docker_provisioner_image_timeout: 60
docker_provisioner_image_repository: ""
docker_provisioner_image_push: false
docker_provisioner_image_max_provisioning_time: 120

# General container options to apply if no other ones are specified in the
# specific container dictionary of the docker_provisioner_containers
# variable.

docker_provisioner_container_name: ""
docker_provisioner_container_image: ""
docker_provisioner_container_privileged: false
docker_provisioner_container_tls: true
docker_provisioner_container_stop_timeout: 1
docker_provisioner_container_tty: false
docker_provisioner_container_exposed_ports: []
docker_provisioner_container_command: ""
docker_provisioner_container_env: {}
docker_provisioner_container_labels: {}
docker_provisioner_container_links: []
docker_provisioner_container_recreate: false
docker_provisioner_container_force_kill: false
docker_provisioner_container_restart: false
docker_provisioner_container_state: present
docker_provisioner_container_volumes: []
docker_provisioner_container_published_ports: []
docker_provisioner_container_ssh_port: ""
docker_provisioner_container_max_provisioning_time: 200
docker_provisioner_container_pkey_control_host: true
docker_provisioner_container_pkey_engine_host:  true
docker_provisioner_container_pkey_timeout: 2
docker_provisioner_container_ansible_user: root
docker_provisioner_container_ansible_password: root
docker_provisioner_container_groups: ['docker_provisioner_containers']

# Generate ansible-playbook in-memory info from containers with add_host
# Take into account that add_host module bypasses the play host loop and only
# runs once for all the hosts in the play. So, if you are managing several
# docker engines in the play, you must disable this flag and  call the this role
# again with this flag activated (and images/containers list empty)

docker_provisioner_in_memory_inventory: true

# Docker host ip address to use by inventories managed by the role

docker_provisioner_host_ip: "{{ ansible_facts.default_ipv4.address }}"

# If defined, this variable tells to role to create a minimal inventory file
# containing the deployed containers. Be warned that auth info is contained in
# clear text in this file.

#docker_provisioner_inventory:
